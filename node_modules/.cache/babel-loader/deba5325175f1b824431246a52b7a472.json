{"ast":null,"code":"export default Invoker = newMiddleware => {\n  let middleware = newMiddleware;\n  let undoCommands = [];\n  let redoCommands = [];\n};\n\nInvoker.prototype.execute = command => {\n  command.execute();\n  undoCommands.push(command);\n  redoCommands.clear();\n  return this;\n};\n\nInvoker.prototype.undo = () => {\n  try {\n    let command = undoCommands.pop();\n    command.unexecute();\n    redoCommands.push(command);\n  } catch (error) {}\n\n  return this;\n};\n\nInvoker.prototype.redo = () => {\n  try {\n    let command = redoCommands.pop();\n    command.execute();\n    undoCommands.push(command);\n  } catch (error) {}\n\n  return this;\n};\n\nInvoker.prototype.commit = () => {\n  middleware.commit();\n  return this;\n};\n\nInvoker.prototype.getMiddleware = () => {\n  return middleware;\n};\n\nInvoker.prototype.setMiddleware = newMiddleware => {\n  middleware = newMiddleware;\n};\n\nInvoker.prototype.getUndoCommands = () => {\n  return undoCommands;\n};\n\nInvoker.prototype.setUndoCommands = newUndoCommands => {\n  undoCommands = newUndoCommands;\n};\n\nInvoker.prototype.getRedoCommands = () => {\n  return redoCommands;\n};\n\nInvoker.prototype.setRedoCommands = newRedoCommands => {\n  redoCommands = newRedoCommands;\n};","map":{"version":3,"sources":["/home/msk/Downloads/design/src/pattern/Invoker.js"],"names":["Invoker","newMiddleware","middleware","undoCommands","redoCommands","prototype","execute","command","push","clear","undo","pop","unexecute","error","redo","commit","getMiddleware","setMiddleware","getUndoCommands","setUndoCommands","newUndoCommands","getRedoCommands","setRedoCommands","newRedoCommands"],"mappings":"AAAA,eAAeA,OAAO,GAAIC,aAAD,IAAmB;AACxC,MAAIC,UAAU,GAAGD,aAAjB;AACA,MAAIE,YAAY,GAAG,EAAnB;AACA,MAAIC,YAAY,GAAG,EAAnB;AACH,CAJD;;AAMAJ,OAAO,CAACK,SAAR,CAAkBC,OAAlB,GAA6BC,OAAD,IAAa;AACrCA,EAAAA,OAAO,CAACD,OAAR;AACAH,EAAAA,YAAY,CAACK,IAAb,CAAkBD,OAAlB;AACAH,EAAAA,YAAY,CAACK,KAAb;AACA,SAAO,IAAP;AACH,CALD;;AAOAT,OAAO,CAACK,SAAR,CAAkBK,IAAlB,GAAyB,MAAM;AAC3B,MAAG;AACC,QAAIH,OAAO,GAAGJ,YAAY,CAACQ,GAAb,EAAd;AACAJ,IAAAA,OAAO,CAACK,SAAR;AACAR,IAAAA,YAAY,CAACI,IAAb,CAAkBD,OAAlB;AACH,GAJD,CAIC,OAAMM,KAAN,EAAY,CAAE;;AACf,SAAO,IAAP;AACH,CAPD;;AASAb,OAAO,CAACK,SAAR,CAAkBS,IAAlB,GAAyB,MAAM;AAC3B,MAAG;AACC,QAAIP,OAAO,GAAGH,YAAY,CAACO,GAAb,EAAd;AACAJ,IAAAA,OAAO,CAACD,OAAR;AACAH,IAAAA,YAAY,CAACK,IAAb,CAAkBD,OAAlB;AACH,GAJD,CAIC,OAAMM,KAAN,EAAY,CAAE;;AACf,SAAO,IAAP;AACH,CAPD;;AASAb,OAAO,CAACK,SAAR,CAAkBU,MAAlB,GAA2B,MAAM;AAC7Bb,EAAAA,UAAU,CAACa,MAAX;AACA,SAAO,IAAP;AACH,CAHD;;AAKAf,OAAO,CAACK,SAAR,CAAkBW,aAAlB,GAAkC,MAAM;AACpC,SAAOd,UAAP;AACH,CAFD;;AAIAF,OAAO,CAACK,SAAR,CAAkBY,aAAlB,GAAmChB,aAAD,IAAmB;AACjDC,EAAAA,UAAU,GAAGD,aAAb;AACH,CAFD;;AAIAD,OAAO,CAACK,SAAR,CAAkBa,eAAlB,GAAoC,MAAM;AACtC,SAAOf,YAAP;AACH,CAFD;;AAIAH,OAAO,CAACK,SAAR,CAAkBc,eAAlB,GAAqCC,eAAD,IAAqB;AACrDjB,EAAAA,YAAY,GAAGiB,eAAf;AACH,CAFD;;AAIApB,OAAO,CAACK,SAAR,CAAkBgB,eAAlB,GAAoC,MAAM;AACtC,SAAOjB,YAAP;AACH,CAFD;;AAIAJ,OAAO,CAACK,SAAR,CAAkBiB,eAAlB,GAAqCC,eAAD,IAAqB;AACrDnB,EAAAA,YAAY,GAAGmB,eAAf;AACH,CAFD","sourcesContent":["export default Invoker = (newMiddleware) => {\n    let middleware = newMiddleware;\n    let undoCommands = [];\n    let redoCommands = [];\n}\n\nInvoker.prototype.execute = (command) => {\n    command.execute();\n    undoCommands.push(command);\n    redoCommands.clear();\n    return this;\n}\n\nInvoker.prototype.undo = () => {\n    try{\n        let command = undoCommands.pop();\n        command.unexecute();\n        redoCommands.push(command);\n    }catch(error){}\n    return this;\n}\n\nInvoker.prototype.redo = () => {\n    try{\n        let command = redoCommands.pop();\n        command.execute();\n        undoCommands.push(command);\n    }catch(error){}\n    return this;\n}\n\nInvoker.prototype.commit = () => {\n    middleware.commit();\n    return this;\n}\n\nInvoker.prototype.getMiddleware = () => {\n    return middleware;\n}\n\nInvoker.prototype.setMiddleware = (newMiddleware) => {\n    middleware = newMiddleware; \n}\n\nInvoker.prototype.getUndoCommands = () => {\n    return undoCommands;\n}\n\nInvoker.prototype.setUndoCommands = (newUndoCommands) => {\n    undoCommands = newUndoCommands;\n}\n\nInvoker.prototype.getRedoCommands = () => {\n    return redoCommands;\n}\n\nInvoker.prototype.setRedoCommands = (newRedoCommands) => {\n    redoCommands = newRedoCommands;\n}\n"]},"metadata":{},"sourceType":"module"}